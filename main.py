import asyncio
import os
from random import random

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from dotenv import load_dotenv
from openwether import get_weather, locations
from utils.design import generate_location_keyboard

locations = ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–ò—Ä–∫—É—Ç—Å–∫',
             '–¢—é–º–µ–Ω—å']

load_dotenv()
TOKEN = os.getenv('TOKEN')

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è Aiogram')


@dp.message(Command('help'))
async def help(message: Message):
    await message.answer('–Ø –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                         '/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n'
                         '/weather - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ\n'
                         '/help - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø—Ä–∞–≤–∫—É')


@dp.message(Command('weather'))
async def get_city(message: Message):
    keyboard = generate_location_keyboard(locations)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", reply_markup=keyboard)
    await message.delete()


@dp.callback_query(lambda c: c.data.startswith("city:"))
async def location_selected(callback: CallbackQuery):
    city = callback.data.split(":", 1)[1]
    weather = await get_weather(city)

    if not weather:
        await callback.message.edit_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}")
        return

    await callback.message.edit_text(f"üìç <b>{weather['city']}</b>\n"
                                     f"üå§ {weather['description'].capitalize()}\n"
                                     f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(weather['temp'])}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {round(weather['feels_like'])}¬∞C)\n"
                                     f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}%\n"
                                     f"üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: {round(weather['pressure']*0.750062,1)} –º–º —Ä—Ç. —Å—Ç.\n"
                                     f"üí® –í–µ—Ç–µ—Ä: {weather['wind']} –º/—Å",
                                     parse_mode="HTML")

    await callback.answer()  # —É–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏"

@dp.message(F.photo)
async def react_photo(message: Message):
    list = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(list)
    await message.answer(rand_answ)



async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
